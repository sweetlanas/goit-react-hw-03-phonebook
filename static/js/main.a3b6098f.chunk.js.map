{"version":3,"sources":["components/PhoneBookForm/PhoneBookForm.module.css","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/PhoneBookFilter/PhoneBookFilter.jsx","helpers/filterContacts.js","App.js","index.js","components/PhoneBookListItem/PhoneBookListItem.module.css"],"names":["module","exports","PhoneBookListItem","name","number","id","onDeleteContact","className","s","phoneBookListItem","contact","contactBtn","onClick","PhoneBookList","contacts","map","PhoneBookForm","onSetUserInfo","onAddContact","form","onSubmit","action","htmlFor","input","onInput","type","value","pattern","title","required","addBtn","PhonebookFilter","onSetFilter","filterValue","filterContacts","filter","obj","toLowerCase","includes","trim","App","state","handleSetUserInfo","e","setState","target","handleAddContact","preventDefault","some","el","alert","shortId","generate","prev","handleDeleteContact","handleChangeFilter","parsedContacts","JSON","parse","localStorage","getItem","this","prevProps","prevState","setItem","stringify","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3b6098f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhoneBookForm_form__1SoAq\",\"addBtn\":\"PhoneBookForm_addBtn__1scI6\",\"input\":\"PhoneBookForm_input__3F6UU\"};","import s from \"./PhoneBookListItem.module.css\";\r\n\r\nconst PhoneBookListItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.phoneBookListItem}>\r\n      <p className={s.contact}>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={s.contactBtn} onClick={onDeleteContact} id={id}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PhoneBookListItem;\r\n","import PhoneBookListItem from \"../PhoneBookListItem/PhoneBookListItem\";\r\n\r\nconst PhoneBookList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => {\r\n        return (\r\n          <PhoneBookListItem\r\n            onDeleteContact={onDeleteContact}\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PhoneBookList;\r\n","import s from \"./PhoneBookForm.module.css\";\r\n\r\nconst PhoneBookForm = ({ onSetUserInfo, onAddContact, name, number }) => {\r\n  return (\r\n    <form className={s.form} onSubmit={onAddContact} action=\"\">\r\n      <label htmlFor=\"\">\r\n        <p>Name</p>\r\n        <input\r\n          className={s.input}\r\n          onInput={onSetUserInfo}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label htmlFor=\"\">\r\n        <p>Number</p>\r\n        <input\r\n          className={s.input}\r\n          onInput={onSetUserInfo}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.addBtn}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PhoneBookForm;\r\n","import React from \"react\";\r\nimport s from \"../PhoneBookForm/PhoneBookForm.module.css\";\r\n\r\nconst PhonebookFilter = ({ onSetFilter, filterValue }) => (\r\n  <>\r\n    <label>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        className={s.input}\r\n        name=\"filter\"\r\n        onInput={onSetFilter}\r\n        type=\"text\"\r\n        value={filterValue}\r\n      />\r\n    </label>\r\n  </>\r\n);\r\n\r\nexport default PhonebookFilter;\r\n","function filterContacts(contacts, filter) {\r\n  return contacts.filter(obj => {\r\n    return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\r\n  });\r\n}\r\n\r\nexport default filterContacts;\r\n","import PhoneBookList from \"./components/PhoneBookList/PhoneBookList\";\nimport PhoneBookForm from \"./components/PhoneBookForm/PhoneBookForm\";\nimport PhonebookFilter from \"./components/PhoneBookFilter/PhoneBookFilter\";\nimport filterContacts from \"./helpers/filterContacts\";\nimport { Component } from \"react\";\nimport shortId from \"shortid\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n    number: \"\",\n    filter: \"\",\n  };\n\n  handleSetUserInfo = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleAddContact = (e) => {\n    e.preventDefault();\n    if (this.state.contacts.some((el) => el.name === this.state.name)) {\n      alert(` ${this.state.name} is already in contacts!`);\n      return;\n    }\n    const contact = {\n      name: this.state.name,\n      number: this.state.number,\n      id: shortId.generate(),\n    };\n    this.setState((prev) => ({\n      contacts: [...prev.contacts, contact],\n      name: \"\",\n      number: \"\",\n    }));\n  };\n\n  handleDeleteContact = (e) => {\n    this.setState({\n      contacts: this.state.contacts.filter((el) => el.id !== e.target.id),\n    });\n  };\n\n  handleChangeFilter = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const contacts = filterContacts(this.state.contacts, this.state.filter);\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <PhoneBookForm\n          name={this.state.name}\n          number={this.state.number}\n          onAddContact={this.handleAddContact}\n          onSetUserInfo={this.handleSetUserInfo}\n        />\n        <h2>Contacts</h2>\n        <PhonebookFilter\n          filterValue={this.state.filter}\n          onSetFilter={this.handleChangeFilter}\n        />\n        <PhoneBookList\n          onDeleteContact={this.handleDeleteContact}\n          contacts={contacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookListItem\":\"PhoneBookListItem_phoneBookListItem__M9zwc\",\"contact\":\"PhoneBookListItem_contact__3kEC5\",\"contactBtn\":\"PhoneBookListItem_contactBtn__EicNo\"};"],"sourceRoot":""}